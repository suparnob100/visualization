%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 20.10.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.6.0.1072779 \\(R2019a\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 448 351
%%HiResBoundingBox: 0 0 448 351
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font CMUSerif
%!FontType1-1.0: CMUSerif
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Roman Regular) readonly def
/FamilyName (Nimbus Roman) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /CMUSerif def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 932 688] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 68 /D put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 105 /i put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 121 /y put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF5
CE16D9AA77431038EA7920FFEBF54E6143E306DC7F199A9AE76599F0F0C97BB1
E6D10C6B128F198FF07BD074305000151BA359478A2E632CD679450B539DC1EC
D5F0409998F8AF3ABBE8523B40BE9B5F150D5D125D65C551E82B612F51F92788
8EACECF38BF0E18883A2E6628FB5FDC17EBA1B912F8C38B6D0EF9922DDB59554
C6B1C155B71DAC5EA8C98E542AE94C61E32EDB78552983C50614F22E4B1C70C0
DE0B479D91B640A4C16C6C891C9111CE4C3F684AF1B959AF92CA7E0F16E9EE9C
22D5621309B039088B051B801983C3FA9A7D3E0A86964FF8F68A2CF4000B3975
7FE4C5A263726C68FE9EB461ADCD889A774A1F71201BC8FE1E1849EBCCD6F739
65D946EB5204BFDA019CF99C0DD0E58A3D5CBCA200CDF0E446E285C45AA44B4D
6B3443448411CA082F025199DE7ED4ABB9AC4CF17EBF7391C224B7587D563921
AA2FC2D46A720ED155993E83935D25D85A28466E1304A50849477E12F051F291
16770AA7CD73DDDAC67AD7ED8824229EADE6F6DCB1F43C7B31573EE8B4D8C610
CB9C48ED4170E25E2F44C4801EED730CD9DA40CEAB9E9701FFE931AA6B10C0DA
0568C4D59EE39988BA2944F6EE6FE5F9546C85E9EC8E0B73D55CCDCF1846943E
3880C60156E6A89DC480030FC95D895ACC242E93A9A6254DB3B3D3B24D229453
5AEABF981A82C93BAEB0D2C59AED9F09F250FB93538EE1B1B865432BFCBA913F
4558716FC08A7FCF5981782F2D0376817308D0203C04AFB006B85D940D8B9AB5
95FA57E6CE1CF2D38FEA080EE292461D741CB5A40F980C91138EDE7CD05901B2
60B3A6C342E0BC64113F57A43C019B26F78C57B7F79877D61E06E3E50CA5C01B
5CD94C7ED57B9A15686E41429DDBC468BF37430AA595FFAA678A6FF6713EF212
95E322C151691E2687A3BF6485326F0608FE771F16ED0EE613F4B3C7489FF515
9B81664C5122DAA1A1D4F9906E495F76C3C02A7703EFF17129E1F97CF8D7BAC0
420DFF5FA4C3FB13C34786C133F42FAF1D9431F95C72AE6E47C37EDE018DF374
7044E73941D4BF95E7CC853B1EE329CB11FBCEE689627AFAF0F60D1B0DEC0D01
B42B03320D029214F604586F59E2B6E5F9CCE20089D7F971FFD096105E9DB18A
3670A4428BAE6DA5D710F4C11891F8EA82A46CA5A10541AAEB5BD651F82E4FF0
375ADBB1A4C0B1F0022565BDDDB81B82D5BD26B32BC166D05AA375B1C208AEF8
8A00D4AC6B11CE329E0B3D7A5AADC52E79C743A9D5C68E854E55F8653DE5DA6C
560BC20B331EC976233AFCCDFBFEBF751913DB3F1E673E07503D49099716BE46
449F8EF34F386CAD7F9878C1A9EA3BE50CAAE1ABC96ADB3AD8B8C5B13BAB5BD5
E5A4AF2685193EC8D80549B709955A5239379683084100E59AE2395527B42D48
DEAA7D1F7459ACD5B71086A91E677A08390ECC86BC9A05BF5D87B6252D52094E
3F2844A3E76D5558C2115900B7EA7CAB2B11B54B66CB90BACFCB51F9319B8818
0822F3A0088B609662B2ABD79B164E2C4A6A3227CA89F0DC950077368E9FB7FF
F431147540D8B7AE859AE3957681E0676AA5043A90C11450286F889386EBBA85
2650BBE8394C31BC1CEA0198D3C3554E02F12F9166FFB7838E33DF84B2C037EF
9C418B875D572397216740A4B0431D2CBC401756DEA83AEFCEDAB19A7D4052BB
1596BB8C6613AACDD4B0915E88DA9F51A9718E8DE7FA55A51B4459F3A7269F45
94423750D386F69F7537CE800CBC937CFDF028A3C2A9FCF64483E8736805D2D1
B39EEE19609EA242D04F0775047A6FB8DBE3BD79D291615FB1227C8F773236CD
23771514BA8FB23A826B435BB927958C67036C2D9D827CE7B21FFD7B2C097BEC
B4553C102E60FD590A0A7AD910BD5622B1F9D02FA06903C1EA1E5A94C9AFE715
3EADE6189C1448B56C8EA804720E3C74C47DB1CB284127AF7A2087B30351FEA9
1460A981B7D40AA848CB6D9BA07D8B94AB273CE68000BFFAE3ADD80224BAF228
BE62EF35BA571B478CA06056D7E65512F3F78E5EA57628AA45BFAC3574E7F339
6019D45660CCDC463A340D1ADFF24C8FFA089CB7A3E7C018E8194A702044A009
DF0B3C208EAB624FCA9EF08F66FA621F86D00BE4AED61A6A92997BD137CF6168
C53E5CF76DBEAD6FD05A5E5D4DBFCAAFF49BD2C22B7EC61E6CF99145D131D57B
9D19D4B13F49A590C7C929F83BC0372E3029648DCC9910B65FC69F23DDEDCCAC
246A8A6810D187E45AE3C429F9D2B1E5BBDA36212715225EC19BC0027F6E2B6E
4E8467D122D771F4D33612D87496A43C4777ADD6C2B3753C981B20A1873E3DA7
F85BD942F79079189A7051403ED3E76DBB30BBB8699653F8CB6BECA50B9F1874
B33E444892EC6FF3A28B7942D9CD17803AA82B5D8D34B6BEE007956CB11F9BBD
B60A9B2299B2AB748B91735EC15F093043788E285EB6C7051F6CCFA5480B8926
E8DCD5BF9368B6AC50A7DBC2BF3592321766398890F614DB22097ABCAA05CD56
0BDD4C81ED735B46DC8138CE7C3D3309BEFD811EC2DC84F513A7E6209719E1DD
B2E174D9421FDA003B2F18CAC5C03DF5541CD83B4CFE406F1309DE4B3C338D63
EAEE9366C77EA11EAE25A713585DD8F4A16C4BE98069D5EF520167902DCEE55E
03A612A2F786AD594F92A8587501AA0867B404989B8FA9015BE31767CE4DAE0D
40D88BB54D4A1772CECEF0A83223B4FFB38C12A3F1419AEC089AFFE823E47060
23998C93D0F9E36B56F3083DDF349EE1879C06875AC6EAA061E75E9591D11F37
6B8703442E9F187A7E121D3219A901AFD987B7C32BCEA07D8CB864DA2AAC5EA7
8FE7FC6441E790EF42028B82E9796324A53E5A0C00217A70685A478AF78476DA
18F11174D401F75AF47416F7E6E3C669A786B8687A31ECF84D3652B87C7A8AAD
099A8C8515C067BCCCBFDCB628D492BA65CE99F28FB0623977F92377F35AF3BE
C06AEAA3B8C4B08FD8504C42A01A627BE6F2E2712D54F9BF2141FAF96E0457FC
CB2667B6FCB85CF8CA74D950044812718CA5010AD330DA51A7DC88C78DF54251
1EE5F040D112E7B1A1303ECE792793307618F5F527379FEDBD4B8461264467C7
24A781E3C48CE63C9C78C5C5A28D241855F1B0536773B5830C46D9C1383059F7
07D5127FA53FF548E5DA2D946BDA45100C6636F91F48025C41E6ED21E6D4DFF1
084EB444147AF4EDC21066457815E2996A60F27EF355566D52D813A5F87A341E
8D23C5A95B9EB0BEF5B6653BE24B1C15CB6D6A5CFE90A538D6D58917B91D9138
E383A876368AA932A553304DFF4197DA7B230C527D186D7FE6C3E44A4D3A3A44
E71DDC81D43C07F7B7988CAD08974F2EEE2CE9479754FF7BA964E1D3619AC908
EDFA61F858DF9A16AF8996F22F432DC34E5FC59209777C4DA1576006476B2D9A
ECD3965CA124A3B2334DF423A811802301ECB7CACAD4324E2D48CBF5CE4F7532
03E0E06A22C3B0DEB1066EF52AC2B9AA7E32265715A1CA25ABC24D3A4AAF20BE
D3C1F8B75B15BD7820EB635BFB24A00820A9D5816666770BD0235E20E59139CF
4607D19AC0477AA4D77B60A300D5E5F2DDBEC182164E0B28EDB4C3557A41148F
D3BA12964E4DEED9D507E31CDE4F41F8626D7EE8958628F030C670DDFB70E651
6879231A85668E4DCB54B107B4BFF13121112F7B0219E944ABFD02053B86C83A
1A63603E1FFDE8566367F866C07B70433F0CACBFCA20C8D7BB3521ECAF628F96
BD6A345C5612DDBB66D2F12B89B01814B188300B8433DA46D8FDD000240D5A7B
A91E5809A622EF6E7BA3A26F133FB5A84653A9D856729D9169C86E0FAD616923
1EFB54115B1097317409693403C4902293573A77A81C6C3ACF4DEC58381FD23F
E8A763A230C91B9ED749FBE7ECD917AB52E336B328AA105BC22E7EA76D0ADF60
4B19CD9782A26949CE4C1293FD086BD313F63A47B151AB8F95AFAC1DFB652FD0
932058EFF82FA2AA0D91E54546E4F4D9E7599781A8F874FA4AFE6803440ACA10
72BE668C0C370914F1850AF5DA1BF897D620F13467EF26A84D7CC6DF42A840DF
E48966061656DC433B8F87A3D2CC30FC98511EDA1AFA95E5BCA04EF60E4FCBD1
3ECE5CD1E7805BBB61F26C88181AA1CDAA61E6DC1109FEFF850BE3A6F8EB01E4
FD2F6C0CEB708B7E8FE7EE0B314E43079D2DDC691FBA57AFFEA2E744E7DF796D
34D86351C53BE4ECB241B55A04AD255678608B0A7A33FEF0B854C11BCBCDA4BE
8F984B7CE32526B03B9F37366788F180F6B41BA7A99F1734DE389C5FB8BB428A
DC28E79DD760C51BCA55BA7FBCFB5FE060710EBF8988EB96D6728CC4BEE7DF0B
522F895AAD962494394F480768F62CBCFF871C61AF48957C5C15D001BC411701
37612DBA30ED40E25D35360FFBCDD575FAC85CC3E5001AB02734F1140950550F
75A53EC9625E5977F8F09FC4AFA5D8AA6E28AD8ADC33D1E87C2608C443677DC8
F9052948601552F2456DB5562F21C99EC73F8B023CA6216F20452D7AE56C1615
5AEFCCEB7856DF91DC88F075884235E38ED1CAD9A7E8BE17027D1C17C75BAC92
D360F3C6CC70788ED7B93BF90678655D933207CB122589A371C8C4850AA18345
57E7D05F18267F988767BE11CD74075F92504F4323E57477761DBE2FF261835C
63FF4EB135838D1283B523841575AECFA543C6449338030D424FDDBEB8360128
2FF56FAF98FB58E1353BBEA640BB240B9F8717D5A82770C50CC498D5623FC08A
932F1EB31FA5BBA912026F63A4F0A791AAF4BDC024622722E52B4A8963C22CB9
AF1DABD3414F332E7812C0704126997F06120333B5125502830C4F9611A66A86
D7D169F7FC3C130A5B38BC4CA73AC2A132D77739D06D2456DAB4D4872F0F8818
BF03BE965762AD32D7ED31F02C21AC628B184293020AFE918675450B0E9F9721
B71F8F1E3F00F3C635F75F6BCEB354AC0E5CD7CD141541A58DAC84E6337D70E1
FF234782D8E25937FB708DD5B8C44279168C149A6640FCC9D6136C16C259A64C
AC94293B09ACA703A5F10EC3C412DDFE60ED6921D2AE6F7E829E41E55875B2D9
1676BBF1B117C93A52A8A7F948975EC6EA3F1E609B06E0B6BE03DC1D953A26BC
75AD998D2D95F712A2CEB1F3E17F219AD835C89A285055BC5091D3A62298928C
8705E4DB82C3BC34A6EED3A82649CC446A99A42C8997C6359907B4D1BBEC2822
93EE86BD93E25FA5DA84431DAF693BE8F1A54D59AC23009BC8E9B26AA06C55A4
C65BC373B41AE9AA4FADC4B292FCD7478ED4978612B3EC26B881AB35E8CD9814
0CEC8982120E0E577AE5F65737DE552B3B33288C04B8F14E2756D103FCE87EE9
BFE298024AE92DB9C5FC40343E856A574EF79F338EC21B68AD5FDBE98F3BB5B8
BF74B3721935FA9587AA9776D165D4C0F348612E42311D03B7FBFA4B88E5EB06
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /CMUSerif 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 448 351 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[0.9492] sc
714 548.863 3594 2884.75 re
f
7.50619 w
1 j
/DeviceGray {} CS
[1] SC
q
[0.999176 0 0 -1.00082 0 0] cm
714.589 -548.411 m
714.589 -3430.79 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
1613.83 -548.411 m
1613.83 -3430.79 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
2513.07 -548.411 m
2513.07 -3430.79 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
3412.31 -548.411 m
3412.31 -3430.79 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
4311.55 -548.411 m
4311.55 -3430.79 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
4311.55 -548.411 m
714.589 -548.411 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
4311.55 -1269 m
714.589 -1269 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
4311.55 -1989.6 m
714.589 -1989.6 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
4311.55 -2710.19 m
714.589 -2710.19 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
4311.55 -3430.79 m
714.589 -3430.79 l
S
Q
5.00212 w
/DeviceRGB {} CS
[0 0 0.012] SC
q
[0.999176 0 0 -1.00082 0 0] cm
714.589 -576.669 m
4311.55 -576.669 l
S
Q
/DeviceRGB {} cs
[0.7148 0.216 0.4751] sc
749.238 1546.8 m
749.238 577.145 l
4272.76 577.145 l
4272.76 2678.09 l
4151.26 2839.69 l
4029.76 3001.3 l
3908.26 3162.92 l
3786.76 3324.53 l
3665.26 3405.33 l
3543.76 3243.72 l
3422.26 3082.11 l
3300.76 2920.5 l
3179.26 2758.89 l
3057.76 2597.28 l
2936.26 2435.67 l
2814.75 2354.86 l
2693.25 2516.47 l
2571.75 2678.09 l
2450.25 2839.69 l
2328.75 3082.11 l
2207.25 3162.92 l
2085.74 3001.3 l
1964.24 2758.89 l
1842.74 2597.28 l
1721.24 2112.45 l
1599.74 2435.67 l
1478.24 2274.06 l
1356.74 2354.86 l
1235.24 2193.25 l
1113.74 1870.03 l
992.238 2031.64 l
870.738 1789.23 l
f
20.0145 w
/DeviceRGB {} CS
[0.6973 0.208 0.467] SC
q
[0.999176 0 0 -1.00082 0 0] cm
749.856 -576.669 m
871.457 -576.669 l
993.057 -576.669 l
1114.66 -576.669 l
1236.26 -576.669 l
1357.86 -576.669 l
1479.46 -576.669 l
1601.06 -576.669 l
1722.66 -576.669 l
1844.26 -576.669 l
1965.86 -576.669 l
2087.46 -576.669 l
2209.07 -576.669 l
2330.67 -576.669 l
2452.27 -576.669 l
2573.87 -576.669 l
2695.47 -576.669 l
2817.07 -576.669 l
2938.68 -576.669 l
3060.28 -576.669 l
3181.88 -576.669 l
3303.48 -576.669 l
3425.08 -576.669 l
3546.68 -576.669 l
3668.29 -576.669 l
3789.89 -576.669 l
3911.49 -576.669 l
4033.09 -576.669 l
4154.69 -576.669 l
4276.29 -576.669 l
4276.29 -2675.88 l
4154.69 -2837.35 l
4033.09 -2998.83 l
3911.49 -3160.31 l
3789.89 -3321.79 l
3668.29 -3402.53 l
3546.68 -3241.05 l
3425.08 -3079.57 l
3303.48 -2918.09 l
3181.88 -2756.61 l
3060.28 -2595.14 l
2938.68 -2433.67 l
2817.07 -2352.92 l
2695.47 -2514.4 l
2573.87 -2675.88 l
2452.27 -2837.35 l
2330.67 -3079.57 l
2209.07 -3160.31 l
2087.46 -2998.83 l
1965.86 -2756.61 l
1844.26 -2595.14 l
1722.66 -2110.71 l
1601.06 -2433.67 l
1479.46 -2272.19 l
1357.86 -2352.92 l
1236.26 -2191.44 l
1114.66 -1868.49 l
993.057 -2029.97 l
871.457 -1787.75 l
749.856 -1545.53 l
749.856 -576.669 l
h
S
Q
7.50619 w
2 J
/DeviceRGB {} CS
[0 0 0.012] SC
q
[0.999176 0 0 -1.00082 0 0] cm
714.589 -548.411 m
4311.55 -548.411 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
714.589 -548.411 m
714.589 -476.471 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
1613.83 -548.411 m
1613.83 -476.471 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
2513.07 -548.411 m
2513.07 -476.471 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
3412.31 -548.411 m
3412.31 -476.471 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
4311.55 -548.411 m
4311.55 -476.471 l
S
Q
/DeviceRGB {} cs
[0 0 0.012] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.998353 0 0 1 60.9 27.0531] Tm
0 0 Td
/F8_0 15.0247 Tf
(0.7)
[7.51235
0
3.756175
0
7.51235
0] Tj
-4740 TJm
(8.1)
[7.51235
0
3.756175
0
7.51235
0] Tj
-4460 TJm
(15.5)
[7.51235
0
7.51235
0
3.756175
0
7.51235
0] Tj
-4240 TJm
(22.9)
[7.51235
0
7.51235
0
3.756175
0
7.51235
0] Tj
-4240 TJm
(30.3)
[7.51235
0
7.51235
0
3.756175
0
7.51235
0] Tj
[0.998353 0 0 1 236.4 6.21875] Tm
0 0 Td
/F8_0 16.5272 Tf
(Day)
[11.932638
0
7.338077
0
8.2636
0] Tj
Q
q
[0.999176 0 0 -1.00082 0 0] cm
714.589 -548.411 m
714.589 -3430.79 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
714.589 -548.411 m
642.651 -548.411 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
714.589 -1269 m
642.651 -1269 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
714.589 -1989.6 m
642.651 -1989.6 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
714.589 -2710.19 m
642.651 -2710.19 l
S
Q
q
[0.999176 0 0 -1.00082 0 0] cm
714.589 -3430.79 m
642.651 -3430.79 l
S
Q
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.998353 0 0 1 32.8121 48.877] Tm
0 0 Td
/F8_0 15.0247 Tf
(-3.5)
[5.003225
0
7.51235
0
3.756175
0
7.51235
0] Tj
-3.00495 72.1188 Td
(85.8)
[7.51235
0
7.51235
0
3.756175
0
7.51235
0] Tj
-11.41881 144.2376 Td
(175.0)
[7.51235
0
7.51235
0
7.51235
0
3.756175
0
7.51235
0] Tj
-11.41881 216.356 Td
(264.3)
[7.51235
0
7.51235
0
7.51235
0
3.756175
0
7.51235
0] Tj
-11.41881 288.4748 Td
(353.5)
[7.51235
0
7.51235
0
7.51235
0
3.756175
0
7.51235
0] Tj
[0 1.00165 -1 0 14.2121 121.897] Tm
0 0 Td
/F8_0 16.5 Tf
(Web Traffic \(Visitors\))
[15.576
0
7.326
0
8.25
0
4.125
0
10.0815
0
5.4945
0
7.326
0
5.4945
0
5.4945
0
4.587
0
7.326
0
4.125
0
5.4945
0
11.913
0
4.587
0
6.4185
0
4.587
0
4.587
0
8.25
0
5.4945
0
6.4185
0
5.4945
0] Tj
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font CMUSerif
%%EOF
