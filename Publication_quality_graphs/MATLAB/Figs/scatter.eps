%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 20.10.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.6.0.1072779 \\(R2019a\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 457 351
%%HiResBoundingBox: 0 0 457 351
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font CMUSerif
%!FontType1-1.0: CMUSerif
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Roman Regular) readonly def
/FamilyName (Nimbus Roman) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /CMUSerif def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 932 688] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 72 /H put
dup 87 /W put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 109 /m put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF5
CE16D9AA77431038EA7920FFEBF54E6143E306DC7F199A9AE76599F0F0C97BB1
E6D10C6B128F198FF07BD074305000151BA359478A2E632CD679450B539DC1EC
D5F0409998F8AF3ABBE8523B40BE9B5F150D5D125D65C551E82B612F51F92788
8EACECF38BF0E18883A2E6628FB5FDC17EBA1B912F8C38B6D0EF9922DC83E9E3
274D2600AF594FAFF306713EE017F20A8FEFEF7ACC54BE3178163F22366987F4
8D16AD15762109362A7037592B8875DFF2083BCE9B638E1FDDF986E698087693
386E52EE27A8E286DECC4EBB4F3C6C349BC5DD5EF95FFBC2DF06B819D206B6D5
2DC9618C5E3FCC1299808BA24E53E201E1EABEF5444BF1A1236F5D1244B9225B
76D5F35077FBAD927B93257440E7EB8B57EB947D5A1C03FD96605F8A124317C4
5C1F01B52F075C0B0F0C1736552513253B567D6640498A093F64CA2D5940E50F
E510C6BD74F39CC27E737B3A17055E2A7A0CB2C1680334F967389A37DE04244A
59A1FCA33889ADD96A4389965D5C00ADEC67B58E8D5B6F3449E06CAECA7D2835
AF82129D8E29EB945B34FD85E372C3ABF6A8B5F8815184DE3E035C0FBC8A3A8D
7DAF55364237573A8A932DE6267B0D764C6CF56E6031680E9CB60453C55B5594
7D04D05BFA7E0DEF8C58AB758755D60715E64D6A53527F8210E32357E7C8F8C7
DC8CFA6C29D973DEBF8CC0C9AB380761638D08F244D81C4807355ABBEC256BB1
4235D37C21771EC912FA09E9D0F44FB32F5D534094250C7B418F50DAEEADC383
3A730B1464C788FF1D9C72D403B55206958594086BA34BE7AEC519439E638FC8
793286646DFDCD220A63617B404B5667F34E3F6F2CBB481750D1CAA54AD39E6E
F3704A94BDDE5ECF2FB1F07BEE7D4F38E5B3967952122F1A036F5B24EC236172
E08A8DFBC673B6455FD10E65C5E9BEDC0C6390B411D95CDA6D2806056DC7A79E
337B9C3D963F22F0CC47A5B8C3169B54DCB21CD7B10CFABCFB9E92C5B93CEF3E
88E6B22E885419EDE691B73106DC4469A985173925366407389B86F677D17223
928AD12D42F192749EA401409B11DBB2BB1D115D50F4C9268CAEB2C9638B8D5F
07F2C390317AC33FE979BECE6789D96718556169B9B27C4B0664A1BDDA627E5D
B8403146D9DEA598EC84FA2E917B409536930C99082A1E882A240EA84D80CF2D
0920445ECB864CB2BA8012690F738B1364C11FE700B3B2EEF35EECBE0003DE10
EDEA3F0813B6C9757CDAA7AC38BBFAB23EE36E08D0631D34D48567411EE4A4F8
8C4DD5232A11CAAA55F1364F04C78BB083AEB9661A69CEAC534853D172EC3430
C7F53C3D9AD4F00F8840CE4F1BED10760FA492F322368D39CB2F6AECBB2C49FE
0655A633BEA7F49F3FA02250E1060E9F3A40D520F3EA1AA09C096E51E25E4048
34B7C7DC8E7BCE474AC2E105AE0677EC6BDFE1E3A15282DD49EC239AF851184A
4CF465A7E778AA1BEE63E5B1E38E5D8E93E9FF1200DDFF0211348A267CE3D057
ACAF41283C696F3C71FDCC94EB54F24C201938FB4646BE7B4768188142728D1E
FC473EB65EAF099CD12F160E14E4B211847A08896060C88DC3FAAFF10BB45FEA
58F4AFD227C0B8214338DCA0DCAE608B3D53DD46ADAFF3100F172FD8EE5C40A3
779FD3039329A7CFDFA7AD9ABC8453572DA21196799984338F41C62DF21F7B1C
0530E7BEC4ECFEFAD59773FF1FE7E9A544FCC51CF00FFADF9105B0DFE30CEAB7
15E345D365E187776B7A26BFF191520035033FEB66B265D6ECEBD23602231A5B
3D550258E0F7E577C31501628013FF86641B441EE3D837A34DD0E8163DD0BD73
E2F3EA5F5D9AE5B017F9FCC4D4EE4813174F15B29D5FDECF150F90EEEE764BE7
8C32C15B2CBD702AF9755B889EB51D62B360D1677A1B4DCF9661940F789331B6
221736DCD67B03A7556722397AB35472A067EAB263F4B52478622993E1877A03
338A61B32B08861DACAD4ED56F61F6C59E1CE381AA515C5DB5B7616D3D638A28
DF00F936341F88ED1EC76B3A2505955A317BC9C30B7B7CBEC8E0CCBCA06FBBB1
132B657C829B01430B3122A6FF4B39D84C0AF6E436F29D6EFE729E2B061F5F91
AF22FE5B55E0D76A7F415DA6A9BF7C7B7010D56365670C67ADE08537F61F9D14
1E73282A729DAD9316C875AA577B95F5F67BA156C8817F998CC1E56A3C1965D9
176655511A5427EC0DF69C58C5AE625ED3E7B71B9AB157042E0C89C816ED294D
4DF4546C0262B73683B93B4088F87D7B67BD9878B5738A5FBA8D378A89708CC6
07C6AC963569825EE77B20167FF459A8E7B9FDDA99AE20917058D8CD4E839EEC
DBADA55612F9786C7FD005F92ACB56897FA4DE7C24413C9512C8AD9094B99448
BD62C3C3915DDFA9005ADDA26BE4766B616B8B1A1A323CF5677C21DB79A97AC5
2EA7328919A4E70B38FA204806BA0D68334F88ADEBB714CCCA71994A4E08560D
39687F5DBC5433EFBC0E0536E7C3DA05BB3A3965FE8A125832E8F66ED1489787
9EE5D70C3E2938C5AA492577558492C3B07F9621966108589C642CD7457D34A9
D48AB026D5075530CC79EA30B7DD4F9306DBBDBBB3C0D8EA20A3E16D910AF88C
B85F00129680C29B67CD795599A087CF46AC6A34F489DB357D96C9AEEE17DB3A
A1233A588E1CF369741E2358263272987F10EB1F23A24681D8ACC9DD3E96E7B4
6C3B0DBBA4675B7761678EB22E34104D8ACB488B2282B1DBBE0015681B29DB00
8C0D6DF21100CCBF63E0CEA1B7480AFE7BBB57463C7C86878518DFB202F3D13D
621A7F20ECE7EA200EE2D707916DC68497CCADB13015FCA834510D95CFD31DBA
F1474F33ED3E2EF3D593B92582C933ECDD0E796111917DAEE2C50658D96B6884
EBE065B0B0BECFCB5D19A7163C088A932440407264C4011AB3CEB31B7BF6953C
87EEFE3E8819FC074E3BD655B2F7F11F15838F610A6390CC79AAEC5712ABBBFD
8595E1FDBD527ECC0A797D25F631E7BB8ADF1EF45F56734655144ADA3E600857
482C83C2471963882D41EBB1E2E71ACA93BF4CFE06CB9B989765575080A319B8
4CC9C84C0126410DCD321D00635E908EA0286B7ADD9BA22BF1AA0B831D2D761A
3F9CF042A52373D61531038665A792E0BA52EE197ED6B5CCDA751C9E49E34BFB
AB30044D4AEE13C4BCC41D7DA17665E3DFE4F9B74B18433466A754696D9FEBC6
EC955556592BCAD3A8A8C760479F416C982E833508656DB6D7A030DD67BC507B
56C2E37FB6D1EB66AE76F6C878ECA97BE859F6A39547731736734720A08EE6BD
3BB34AFB74F170E38696FDAA448D0CE1DF08D31C5CA9A53E310275B1B305D189
716EF7F04981B6131E22552467D88434617CDE340F65900B5F5E72294BB9AF3F
EB0A4AF264034B6D3CFE04E211AB7443E59B3FA12A75BBB2ED82F09176254811
0C1D170192AD0DC9809F4C39222CA14C2D08388B48A6226C6BE5AA22252018B2
20132225AC66154B684F20121A11E0F13E4D4FB912027E1D7CA12B505034A989
A9226CBD689F4C4D41F24B78A08D0350111326101321A962F407FC9650BE3163
52917CFBA24A20B25686CCD64E574FBF1C9DC0FAFDCA65CC743E47F2CB60C637
EC2D1501FBC36E9A1673890275EC914F3DB1375A236EA746CB957D1CF1E517E0
2B09DCA72E1FFB8D2F05E1BD1FFCDB54C6F70E2E092DB759F84288E06F32E799
45A3D1D5923066387DAD549AFA5FD2FE016FCAF63B71E859817CE2351CC0791C
51091AB4B5B557C3262D9832AAC92151866B0701E0899DA479BAF9B283FB1525
81156A7EEB564E7826E1D9251509BA97472F5CC69D9095BF3100455290E6DF0A
61571ACBF0323AAD1791CB08FE37F53BCAAACF2C5909360329E5E65084114B1A
98E546C75F12AD46C650E088380789AE78A18C0F41800E5DD9F734497A9827E9
4E9DE38D3230BD76CFCC6304807A34E1CF275D78DA363CE5FC754DC60B8DCFDD
26BB37C65F7F34B16E9D867249C13DDFB82FB288EBFE341E0006C13A6CFA1B5B
9D2C96207236CB54FF41E55B88A83C7DE55757E348C4BA11558FB50D17131FE3
278D8B03D8FF37E9726579506590B52970C22508FC391E8C7E1F63447010A7F2
84F9CFC222E47183816262055C2B1F77319CA18B6E5EADF2CE7A7C3328BFB5B1
CE7073C42C731FB2F6154A87AB4CA4BEB42C8124EB2DCD5916C7419D7A9B4700
51BA6FB9888F607ABE5BCD88BCE8829AF69689C2483F3813A89347905962F783
A1E4A4CDE2CB9E3100A28855E460E7D3557A8A02ED12197471C4EE91E32B58D0
68EE8C396CA57846E6A1885A143236DEC2BA9269E4D60F6FDF7A6461B220FC0F
2FBC7D83ED7CB3C2B9E6B8ECEEB74DA7A8C58252782619C19D3E946FDCE7922D
97F6A846C472B8DD713480F0035465BC204648C25C94DC72390D6C6B4E4EDBC9
0BCFFFF6F028F16C9311DF8990981D846F02146E95A31B547D5BCB01AB37BFFE
0C6CEB66F4900A6626BD0B253E32250C4BFF1DE8E7C3A86E9CF5817962350084
9648C3E2128BB4B0ACC14CFA742BBBD202C31FA9D40049B4E167208B2FFEA849
BC53CFA8F561CFDB0694C32B0D74E0346EB7427FB8EDC852EA499A23AC1FB416
E5F11F420EFB430EBBAF3098F09412B0DD11533E70373BD7AE43549776192D83
90C576D2EAA2AF7C853D82E26762A5AEEC2207EA4E150ABC779AA2C87B13AA00
107FBEACC8CF72C52925691AD378821FF599337821ED138AFF81BB59355927F9
6CBB4EF3D97BC3BC73E2DCA1AE0A962A1DB9376FA28356A7D876C4FA8FDCA2D6
5FC1BB93
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /CMUSerif 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 457 351 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[0.9492] sc
713.84 560.422 3593.22 2876.11 re
f
7.50194 w
1 j
/DeviceGray {} CS
[1] SC
q
[0.999525 0 0 -1.00047 0 0] cm
714.179 -560.156 m
714.179 -3434.9 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
1612.91 -560.156 m
1612.91 -3434.9 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
2511.64 -560.156 m
2511.64 -3434.9 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
3410.37 -560.156 m
3410.37 -3434.9 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
4309.1 -560.156 m
4309.1 -3434.9 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
4309.1 -560.156 m
714.179 -560.156 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
4309.1 -1278.84 m
714.179 -1278.84 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
4309.1 -1997.52 m
714.179 -1997.52 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
4309.1 -2716.21 m
714.179 -2716.21 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
4309.1 -3434.9 m
714.179 -3434.9 l
S
Q
2 J
/DeviceRGB {} CS
[0 0 0.012] SC
q
[0.999525 0 0 -1.00047 0 0] cm
714.179 -560.156 m
4309.1 -560.156 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
714.179 -560.156 m
714.179 -488.256 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
1612.91 -560.156 m
1612.91 -488.256 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
2511.64 -560.156 m
2511.64 -488.256 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
3410.37 -560.156 m
3410.37 -488.256 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
4309.1 -560.156 m
4309.1 -488.256 l
S
Q
/DeviceRGB {} cs
[0 0 0.012] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.999051 0 0 1 48.2891 28.2316] Tm
0 0 Td
/F8_0 15.011 Tf
(149.65)
[7.5055
0
7.5055
0
7.5055
0
3.75275
0
7.5055
0
7.5055
0] Tj
-3240.05 TJm
(158.57)
[7.5055
0
7.5055
0
7.5055
0
3.75275
0
7.5055
0
7.5055
0] Tj
-3240.05 TJm
(167.50)
[7.5055
0
7.5055
0
7.5055
0
3.75275
0
7.5055
0
7.5055
0] Tj
-3240.02 TJm
(176.43)
[7.5055
0
7.5055
0
7.5055
0
3.75275
0
7.5055
0
7.5055
0] Tj
-3240.05 TJm
(185.35)
[7.5055
0
7.5055
0
7.5055
0
3.75275
0
7.5055
0
7.5055
0] Tj
160.019 -21.416 Td
/F8_0 16.5121 Tf
(Height \(cm\))
[11.921736
0
7.331372
0
4.590364
0
8.25605
0
8.25605
0
4.590364
0
4.128025
0
5.498529
0
7.331372
0
12.846414
0
5.498529
0] Tj
Q
q
[0.999525 0 0 -1.00047 0 0] cm
714.179 -560.156 m
714.179 -3434.9 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
714.179 -560.156 m
642.278 -560.156 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
714.179 -1278.84 m
642.278 -1278.84 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
714.179 -1997.52 m
642.278 -1997.52 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
714.179 -2716.21 m
642.278 -2716.21 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
714.179 -3434.9 m
642.278 -3434.9 l
S
Q
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.999051 0 0 1 21.407 50.0355] Tm
0 0 Td
/F8_0 15.011 Tf
(50.00)
[7.5055
0
7.5055
0
3.75275
0
7.5055
0
7.5055
0] Tj
0 71.9031 Td
(58.75)
[7.5055
0
7.5055
0
3.75275
0
7.5055
0
7.5055
0] Tj
0 143.8062 Td
(67.50)
[7.5055
0
7.5055
0
3.75275
0
7.5055
0
7.5055
0] Tj
0 215.7093 Td
(76.25)
[7.5055
0
7.5055
0
3.75275
0
7.5055
0
7.5055
0] Tj
0 287.6128 Td
(85.00)
[7.5055
0
7.5055
0
3.75275
0
7.5055
0
7.5055
0] Tj
[0 1.00095 -1 0 14.2082 157.515] Tm
0 0 Td
/F8_0 16.4964 Tf
(Weight \(kg\))
[15.572602
0
7.324402
0
4.585999
0
8.2482
0
8.2482
0
4.585999
0
4.1241
0
5.493301
0
8.2482
0
8.2482
0
5.493301
0] Tj
Q
/DeviceRGB {} cs
[0.7148 0.216 0.4751] sc
785.117 560.398 m
785.117 580.328 768.98 596.48 749.07 596.48 c
729.16 596.48 713.023 580.328 713.023 560.398 c
713.023 540.473 729.16 524.32 749.07 524.32 c
768.98 524.32 785.117 540.473 785.117 560.398 c
f
20.0032 w
0 J
/DeviceRGB {} CS
[0.7148 0.216 0.4751] SC
q
[0.999525 0 0 -1.00047 0 0] cm
785.49 -560.132 m
785.49 -580.053 769.346 -596.197 749.426 -596.197 c
729.507 -596.197 713.362 -580.053 713.362 -560.132 c
713.362 -540.216 729.507 -524.071 749.426 -524.071 c
769.346 -524.071 785.49 -540.216 785.49 -560.132 c
h
S
Q
1288.37 971.273 m
1288.37 991.203 1272.23 1007.36 1252.32 1007.36 c
1232.42 1007.36 1216.28 991.203 1216.28 971.273 c
1216.28 951.348 1232.42 935.195 1252.32 935.195 c
1272.23 935.195 1288.37 951.348 1288.37 971.273 c
f
q
[0.999525 0 0 -1.00047 0 0] cm
1288.98 -970.812 m
1288.98 -990.733 1272.84 -1006.88 1252.92 -1006.88 c
1233 -1006.88 1216.86 -990.733 1216.86 -970.812 c
1216.86 -950.896 1233 -934.751 1252.92 -934.751 c
1272.84 -934.751 1288.98 -950.896 1288.98 -970.812 c
h
S
Q
1791.63 1382.15 m
1791.63 1402.08 1775.49 1418.23 1755.58 1418.23 c
1735.67 1418.23 1719.54 1402.08 1719.54 1382.15 c
1719.54 1362.22 1735.67 1346.07 1755.58 1346.07 c
1775.49 1346.07 1791.63 1362.22 1791.63 1382.15 c
f
q
[0.999525 0 0 -1.00047 0 0] cm
1792.48 -1381.49 m
1792.48 -1401.41 1776.34 -1417.56 1756.42 -1417.56 c
1736.5 -1417.56 1720.35 -1401.41 1720.35 -1381.49 c
1720.35 -1361.58 1736.5 -1345.43 1756.42 -1345.43 c
1776.34 -1345.43 1792.48 -1361.58 1792.48 -1381.49 c
h
S
Q
2294.88 1793.03 m
2294.88 1812.95 2278.75 1829.11 2258.84 1829.11 c
2238.93 1829.11 2222.79 1812.95 2222.79 1793.03 c
2222.79 1773.1 2238.93 1756.95 2258.84 1756.95 c
2278.75 1756.95 2294.88 1773.1 2294.88 1793.03 c
f
q
[0.999525 0 0 -1.00047 0 0] cm
2295.97 -1792.18 m
2295.97 -1812.09 2279.83 -1828.24 2259.91 -1828.24 c
2239.99 -1828.24 2223.85 -1812.09 2223.85 -1792.18 c
2223.85 -1772.26 2239.99 -1756.11 2259.91 -1756.11 c
2279.83 -1756.11 2295.97 -1772.26 2295.97 -1792.18 c
h
S
Q
2798.14 2203.9 m
2798.14 2223.83 2782 2239.98 2762.09 2239.98 c
2742.18 2239.98 2726.05 2223.83 2726.05 2203.9 c
2726.05 2183.97 2742.18 2167.82 2762.09 2167.82 c
2782 2167.82 2798.14 2183.97 2798.14 2203.9 c
f
q
[0.999525 0 0 -1.00047 0 0] cm
2799.47 -2202.86 m
2799.47 -2222.77 2783.32 -2238.92 2763.4 -2238.92 c
2743.49 -2238.92 2727.34 -2222.77 2727.34 -2202.86 c
2727.34 -2182.94 2743.49 -2166.79 2763.4 -2166.79 c
2783.32 -2166.79 2799.47 -2182.94 2799.47 -2202.86 c
h
S
Q
3301.39 2614.78 m
3301.39 2634.7 3285.26 2650.86 3265.35 2650.86 c
3245.44 2650.86 3229.3 2634.7 3229.3 2614.78 c
3229.3 2594.85 3245.44 2578.7 3265.35 2578.7 c
3285.26 2578.7 3301.39 2594.85 3301.39 2614.78 c
f
q
[0.999525 0 0 -1.00047 0 0] cm
3302.96 -2613.54 m
3302.96 -2633.45 3286.82 -2649.6 3266.9 -2649.6 c
3246.98 -2649.6 3230.84 -2633.45 3230.84 -2613.54 c
3230.84 -2593.62 3246.98 -2577.47 3266.9 -2577.47 c
3286.82 -2577.47 3302.96 -2593.62 3302.96 -2613.54 c
h
S
Q
3804.65 3025.65 m
3804.65 3045.58 3788.51 3061.73 3768.6 3061.73 c
3748.69 3061.73 3732.55 3045.58 3732.55 3025.65 c
3732.55 3005.72 3748.69 2989.57 3768.6 2989.57 c
3788.51 2989.57 3804.65 3005.72 3804.65 3025.65 c
f
q
[0.999525 0 0 -1.00047 0 0] cm
3806.46 -3024.22 m
3806.46 -3044.14 3790.31 -3060.28 3770.39 -3060.28 c
3750.47 -3060.28 3734.33 -3044.14 3734.33 -3024.22 c
3734.33 -3004.3 3750.47 -2988.15 3770.39 -2988.15 c
3790.31 -2988.15 3806.46 -3004.3 3806.46 -3024.22 c
h
S
Q
4307.9 3436.53 m
4307.9 3456.46 4291.77 3472.61 4271.86 3472.61 c
4251.95 3472.61 4235.81 3456.46 4235.81 3436.53 c
4235.81 3416.6 4251.95 3400.45 4271.86 3400.45 c
4291.77 3400.45 4307.9 3416.6 4307.9 3436.53 c
f
q
[0.999525 0 0 -1.00047 0 0] cm
4309.95 -3434.9 m
4309.95 -3454.82 4293.8 -3470.96 4273.89 -3470.96 c
4253.97 -3470.96 4237.82 -3454.82 4237.82 -3434.9 c
4237.82 -3414.98 4253.97 -3398.83 4273.89 -3398.83 c
4293.8 -3398.83 4309.95 -3414.98 4309.95 -3434.9 c
h
S
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font CMUSerif
%%EOF
