%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 20.10.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.6.0.1072779 \\(R2019a\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 452 348
%%HiResBoundingBox: 0 0 452 348
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font CMUSerif
%!FontType1-1.0: CMUSerif
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Roman Regular) readonly def
/FamilyName (Nimbus Roman) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /CMUSerif def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 932 688] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 40 /parenleft put
dup 41 /parenright put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 72 /H put
dup 87 /W put
dup 99 /c put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 109 /m put
dup 116 /t put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF5
CE16D9AA77431038EA7920FFEBF54E6143E306DC7F199A9AE76599F0F0C97BB1
E6D10C6B128F198FF07BD074305000151BA359478A2E632CD679450B539DC1EC
D5F0409998F8AF3ABBE8523B40BE9B5F150D5D125D65C551E82B612F51F92788
8EACECF38BF0E18883A2E6628FB5FDC17EBA1B912F8C38B6D0EF9922DC82DBC7
651B73B133AC9E7307A1F2B17999DC97A018E648AE6EC97A255132DED003E94B
F395BC78067060116CE16F7869DC39BA7C96DB14C73EC4F419C10C05B0BDF128
BDD1CE584BD13E2C0E291FE3F6B18E4437D115477C9A30264ECCE8BD2C41C2FA
E95FCC43F601C99F04AC9984C8758D50630BFAF6C326E98548454E75B203BEE0
A2EFC844FCA170D50ECED551AFDC88AFD829979743EBB27BE626F03E2AB1EB92
0517D7D5FE0F1C934587B9F482F4079F3EA8473BBD153C8EC70EA8F078CACF64
BC89DBE20C494284651C5673587BF790B147F2EECEF3C1EACAD456745109C7E8
03D2AA16AF9556300F69CC26D180A4BA60C7EB1E1890682758C170212AB3EE56
410CB96354FE9A92DBAAD141CAAB54558CA4BDD968517E96CCFF058FDE51747E
9E112D526FF02778D210CC25E022DB62080815CC14D30D2CB42FC1EF3ED94DCB
EB4DF52509BDC9140309B577A9AFF2D362B314496F84E94687180B3C17563AE4
D17C701E9FF5A7CC25CD05CA3195670DCE063CD1247B4297198E5D703CC56BFB
988E14043A25A90B6BA323DED9E7385D4EB2A6DFC79E0B6716DA12BAF02DB2F4
42F35E9E6BDDD978F303644F734D97406F4FD9569ECA9BAB35BDF41D541C0BD3
984A73EF8E9F0AE747AB552016CA780303EC138AD9447A5F41BDC4106AA8946C
C9A79E5802D867C962C0A91798C4B0D97E90BB470FBC7BA8AE105E784321E97B
329D6D2334D376D75BBD75CBD68A39377642AC0202B1D99246B2688ECCA928A9
D5B6587A5C7109806D9BBD5D9D6D261B57A98C8E9B3E09F44A3E7463A779DD99
2FFA7A7365634BF9D0EDBF0927341CD8FEE73E8B136032388BC4EA5C226C29C7
C44514AFF7D110CB322B225542AB721DE336EF6011FA57F398CC6094F879E55C
D1F3E2602B5D9DB962EA11EB8CC6AADADDF383192733CE1920925BE1EA1CC55F
EB67F39DFF904131078BE3915EE05740B666ACB51350B2806150F4ACFBF297FE
9C30A7B02FBFA40C03FFDFE433D14117DE09AB70062CB89007A7CE41A8023AF8
0383DE1A64224E9ED728548EE27389CA6F63E933ED85A5BAB1F497595FDD9212
C857937731BAEA683BDD19E02FB86D42BB4F152E24ED9B6110B885240F26977A
8E891BE4F17A2670D9C4914B9BCD59742A9042F24E9438D24E749C2457EFE38C
A908444592B9FF40AD0122732660BE332B2B75A2B8B1C8935E845A7AE32EBE67
1892BD69D7D8BC477055B63485CC71CFD11597367D6ABE335FC19ED5474EDE27
337731B62EE48347DB500C23A7FAE9CAD965B67F7597A9069F769B3ABCDF2EDD
DF8FAF2729E9E612CA5CCB1AF68202359F986AFC433C5386103C255C67431E8B
0E6A1CE542B9B225E4B2DADE4CA72C84BF397839DDBB6A4FD8400A4B4A7604D1
34C2D003BFCBA1BA2A621BE2F2DEEDF7C259B86DD9EC9E589D1DE4537EA41FB9
59C8FE4242F2F2C0A1904BE9B88FBC5AE87543747E8730EE26D5AF7FA29010D8
A24B217B1160793CDA8371EDE242C8C37DC86A432A42A0C2C208016A71B2C625
F2B9868F71F63910E8C29BBBD0CAEBAE3CBBA8CC2F844807DCEA59504F55D187
5520FA7C25ABA7922A773D77DFE745E2A6D76B7B94CD65DE9623685ACB641719
1E7F9055ADEB70E155A12C74D8A03A230EECD78638569132E461D13D25DA96BC
159A5C720C04CD356740EDEB0C11FEC9B19D1692FCC0ED42ADA9B87E6D2BBAF0
C7E0156A67B18D888604E02E700B019F496A685A4986C30D836CEDE524A9A92F
BFD73C3F7D18219CC1008093C03F850B11E6FE01CB8C8A4DA01FB47E3CE8BB41
639C67F3666DF70793E9783ACDEA745033E434C435142C3D30CA1229BE8944C8
05D13ECEACEF8DC78725EAD08CAE26BDBD89408334C08AF2B832EDA35835B93E
9712D5387AFDC14B74D6B278EAC0604AF675F93E9CB74E11AA1E7119E7870123
43BF64513108F0A4479882011F06EB05DE2447B0C4EC7D27787F2004518A4CE3
AAFF00FE074AEAE3B3382448604B5C4447721BB00991AF44D79148E88DA721E6
D0041EE773DC00FB53FCB29B0176DF0955E6BFA1814F3B636C9066C2BE15F100
96DD4FE5246283D80334B5D4C221579A71BF3EAD0AFCAFCB29C8E4104199A2CF
6FAFF08B986AAFA5DCCE23F49A89C836B58877AB78C2460FCFC9E7923539C6A9
43C3C68C4A6B114BAF6B0506465136DF77EBE67FAB83405C24EFB8CEE100C0B6
EA17D55460EBFD5499820B3AA7606581A36CB06744E141F21E0C85877E05EB75
41D1C26DBA328BD6F9028F297BED643EDA90C7CAB36CE8C476FC0C744F65EAC0
2C6D77B26F5934422AA02580C3503CBFCA9EC2D984E9AA74CAAB34B582E7002F
B41FF3E7800B304CED7AD5785E52C0108A48D2BAFDD80EE0D2EC82C293D065E4
149F3BF494785FA811AF7CD4DEF5F04AD8D6EEDEB0004FB28EE65B05134D1870
4B81CB9F4AFBE9F1A0B279B912E44961254F06CE6D87E72335653372E6735D53
5DC3C47EA86756049B130C050287F0205A962B630C4194187C70158CE810F885
739F28A0604ED72D6AFF756E5A0688B2CD912E85FC1C2C7EDDE9B46C85BA080B
F1D9B832A646DA4053A6C164C4648A746185FFE2DC1EB21E0E32424D414D5AD6
B16C6DA1BC4E1CA378C1B850985810BBFFDF79733ECE2A7B0F8E3E3660A26D32
C437C5F34F1F53D2CCF95D8062AD08922AEF5976B64D3744CA4F805ACD719485
E04F54C36FA015A2A8E98535A5448906C8A5B5992DB495055D94AB2E4EB73821
B5FCC1D9F65183337CE2BD1D9AD51AA346965AE872B1E8AA2816AE381D5C9D83
D5A765A1137F1EB1C403A8073435A7F8F15FA231CC3A3D8F2B2C044B74C39C2B
8D3077F44F6C706FB3EF358AF1672CE4FECD94C2DD1C7D3BEFB750BB73263E23
9D3C3513324FAE19B974F90120835CF0E1DEFC24B974424D101F18FF7560276A
0C24D41BB7E56EDF4763FC8EFCCBCCA20437BB5A5C41DDD79C97E8BE62D71181
7D6C9218E1734CAB34E0A0A22D1655F8F6FC253C3E2593B4BF24B6524F82C84E
CDC4D1B266C19DDA217D82470CD6502762B2A87D70865A2241CB7541E9B7DF00
0969BC4B44B727E77A19EA2B3810663B85811B24885047A0C9CB602FA06A79C4
6ECB324A3F1E998A502C5DB108C4CC9750699E127BC43F302947E0D56DCF09B5
587BC45165A395BFD801727B2F005CB69BF866E12229917EE6A818ECE63C2F83
786E1271AF8639291D5EBD1BBD99E9AAD14E0D7F1783A3726A3668014932AB34
4DC78DBD59517355A2BCB80D571D9AB3D5855C23FB22FDF780DC7A6696A15820
323D28E208E32A3DE89818D2F3C02EDF6A508C4F0A59ACD011652CC759C75BFE
5CC5FFBE75CAE778FD829F9DDF852166A07FFCD4A6EC1796CCA3645F40BDE257
9804C72308AE40B3FB7ABD29F2780FF417E7190F54D3D22B858B899C329F29C5
E2C69CC06D11868CD4F96169727DFEB72AA4DFE693F84683CFAED32CE3FE8EE2
7AE87A511A12C66F4681E9A5C700673050159A0CB95E0ECD81180F0ABE9D16A5
BAA6F96D8B5F7CC29049ED44F50E5D5F7FE6F0D2EEFD704A7F1647D79E91C6A6
249A1F45291DE9CF73F5D64266E41A07EBFF3474959FD3AD59F8E925D7BBC3DB
449589ADFBC94C888E304E07C2C9D21A1269F465C01716BED28673A830BFF25A
5C98DDF33876B9D3CE42D0E7CA796901D4F5D4B2278FEC1F771F1C28F7AB1AC5
2C6EC03BCF25A950E0DB8592000B9CDE2BF844C86E1106D1CDC8272F33C563AE
20AD9630A5776EB226211956FB68F57E8E34D8CE217D784764F583D2110F6A51
3884F5D51A6600E3618812DC6C90F2967B096596E487AA64B34AEBAD1EFD243B
A49120B3B951598F9D924C0DF74AA301214F8CFAB559007E3EC822C2974DCCFA
12B7A0475C772D1CDD417D3D26D0112A0105B6ED8071BA759DF9E63C5E044978
4696A534F72F6D5957CCDE07AC144B03059F2FBC95A86493ABC66E75E78A6E5C
5822CC974335976CA2E003683B4EC26ECBBE82E03286EE326E2817259CE93721
732643DF72872D0AE7B4C760536723991F54E4C28A680E8A4C14D97148A49FD4
A87C37D950189F1668ED733C793B09DFEC47DAC23C95F96388226BAAAB62E6D3
CA7143302861E4748E9305A39E55D9C01B40784240AC1B62404DDFC0974FB40B
06D2BC0BED28E6409E5AEF882E332C673502B735E915956667DCF307DD32B064
AF709711FF394766F84DE1D18D8C3E78680480F74149BA60054CC025EF5902A6
553BABD778A3305F19CDA5CEF3C6C6B8254507538C7A5A17B3A734E7425525A3
8BF0EEADF353391A184A6086E14A0D55A9CA2EF0091487DCB3E42BD68891B2DB
28C7039B78BEFA627F39C0D1F71279F43E81586EC3418775FD4972EF85208AD0
E19E6BDFB757D238D9981667077F
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /CMUSerif 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 452 348 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[0.9492] sc
629.855 554.418 3677.2 2882.11 re
f
7.50194 w
1 j
/DeviceGray {} CS
[1] SC
q
[0.999525 0 0 -1.00047 0 0] cm
630.155 -554.155 m
630.155 -3434.9 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
1549.89 -554.155 m
1549.89 -3434.9 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
2469.63 -554.155 m
2469.63 -3434.9 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
3389.37 -554.155 m
3389.37 -3434.9 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
4309.1 -554.155 m
4309.1 -3434.9 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
4309.1 -582.395 m
630.155 -582.395 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
4309.1 -1288.46 m
630.155 -1288.46 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
4309.1 -1994.53 m
630.155 -1994.53 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
4309.1 -2700.59 m
630.155 -2700.59 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
4309.1 -3406.66 m
630.155 -3406.66 l
S
Q
2 J
/DeviceRGB {} CS
[0 0 0.012] SC
q
[0.999525 0 0 -1.00047 0 0] cm
630.155 -554.155 m
4309.1 -554.155 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
630.155 -554.155 m
630.155 -480.573 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
1549.89 -554.155 m
1549.89 -480.573 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
2469.63 -554.155 m
2469.63 -480.573 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
3389.37 -554.155 m
3389.37 -480.573 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
4309.1 -554.155 m
4309.1 -480.573 l
S
Q
/DeviceRGB {} cs
[0 0 0.012] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.999051 0 0 1 44.0902 27.4629] Tm
0 0 Td
/F8_0 15.011 Tf
(149.7)
[7.5055
0
7.5055
0
7.5055
0
3.75275
0
7.5055
0] Tj
-3880.03 TJm
(158.6)
[7.5055
0
7.5055
0
7.5055
0
3.75275
0
7.5055
0] Tj
-3880.05 TJm
(167.5)
[7.5055
0
7.5055
0
7.5055
0
3.75275
0
7.5055
0] Tj
-3880.03 TJm
(176.4)
[7.5055
0
7.5055
0
7.5055
0
3.75275
0
7.5055
0] Tj
-3880.03 TJm
(185.3)
[7.5055
0
7.5055
0
7.5055
0
3.75275
0
7.5055
0] Tj
160.018 -20.8152 Td
/F8_0 16.5121 Tf
(Height \(cm\))
[11.921736
0
7.331372
0
4.590364
0
8.25605
0
8.25605
0
4.590364
0
4.128025
0
5.498529
0
7.331372
0
12.846414
0
5.498529
0] Tj
Q
q
[0.999525 0 0 -1.00047 0 0] cm
630.155 -554.155 m
630.155 -3434.9 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
630.155 -582.395 m
556.577 -582.395 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
630.155 -1288.46 m
556.577 -1288.46 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
630.155 -1994.53 m
556.577 -1994.53 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
630.155 -2700.59 m
556.577 -2700.59 l
S
Q
q
[0.999525 0 0 -1.00047 0 0] cm
630.155 -3406.66 m
556.577 -3406.66 l
S
Q
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.999051 0 0 1 21.2391 52.2605] Tm
0 0 Td
/F8_0 15.011 Tf
(50.0)
[7.5055
0
7.5055
0
3.75275
0
7.5055
0] Tj
0 70.6406 Td
(58.8)
[7.5055
0
7.5055
0
3.75275
0
7.5055
0] Tj
0 141.2812 Td
(67.5)
[7.5055
0
7.5055
0
3.75275
0
7.5055
0] Tj
0 211.9214 Td
(76.3)
[7.5055
0
7.5055
0
3.75275
0
7.5055
0] Tj
0 282.562 Td
(85.0)
[7.5055
0
7.5055
0
3.75275
0
7.5055
0] Tj
[0 1.00095 -1 0 14.0402 157.215] Tm
0 0 Td
/F8_0 16.4964 Tf
(Weight \(kg\))
[15.572602
0
7.324402
0
4.585999
0
8.2482
0
8.2482
0
4.585999
0
4.1241
0
5.493301
0
8.2482
0
8.2482
0
5.493301
0] Tj
Q
/DeviceRGB {} cs
[0.7148 0.216 0.4751] sc
701.957 582.652 m
701.957 602.578 685.82 618.73 665.91 618.73 c
646.004 618.73 629.867 602.578 629.867 582.652 c
629.867 562.723 646.004 546.57 665.91 546.57 c
685.82 546.57 701.957 562.723 701.957 582.652 c
f
20.0032 w
0 J
/DeviceRGB {} CS
[0.7148 0.216 0.4751] SC
q
[0.999525 0 0 -1.00047 0 0] cm
702.291 -582.376 m
702.291 -602.292 686.146 -618.437 666.227 -618.437 c
646.311 -618.437 630.166 -602.292 630.166 -582.376 c
630.166 -562.456 646.311 -546.311 666.227 -546.311 c
686.146 -546.311 702.291 -562.456 702.291 -582.376 c
h
S
Q
1216.98 986.313 m
1216.98 1006.24 1200.84 1022.39 1180.93 1022.39 c
1161.02 1022.39 1144.88 1006.24 1144.88 986.313 c
1144.88 966.383 1161.02 950.23 1180.93 950.23 c
1200.84 950.23 1216.98 966.383 1216.98 986.313 c
f
q
[0.999525 0 0 -1.00047 0 0] cm
1217.55 -985.844 m
1217.55 -1005.76 1201.41 -1021.91 1181.49 -1021.91 c
1161.57 -1021.91 1145.43 -1005.76 1145.43 -985.844 c
1145.43 -965.924 1161.57 -949.779 1181.49 -949.779 c
1201.41 -949.779 1217.55 -965.924 1217.55 -985.844 c
h
S
Q
1731.99 1389.97 m
1731.99 1409.9 1715.86 1426.05 1695.95 1426.05 c
1676.04 1426.05 1659.9 1409.9 1659.9 1389.97 c
1659.9 1370.04 1676.04 1353.89 1695.95 1353.89 c
1715.86 1353.89 1731.99 1370.04 1731.99 1389.97 c
f
q
[0.999525 0 0 -1.00047 0 0] cm
1732.82 -1389.31 m
1732.82 -1409.23 1716.67 -1425.37 1696.75 -1425.37 c
1676.83 -1425.37 1660.69 -1409.23 1660.69 -1389.31 c
1660.69 -1369.39 1676.83 -1353.25 1696.75 -1353.25 c
1716.67 -1353.25 1732.82 -1369.39 1732.82 -1389.31 c
h
S
Q
2247.01 1793.63 m
2247.01 1813.56 2230.88 1829.71 2210.96 1829.71 c
2191.05 1829.71 2174.92 1813.56 2174.92 1793.63 c
2174.92 1773.7 2191.05 1757.55 2210.96 1757.55 c
2230.88 1757.55 2247.01 1773.7 2247.01 1793.63 c
f
q
[0.999525 0 0 -1.00047 0 0] cm
2248.08 -1792.78 m
2248.08 -1812.7 2231.93 -1828.84 2212.02 -1828.84 c
2192.1 -1828.84 2175.95 -1812.7 2175.95 -1792.78 c
2175.95 -1772.86 2192.1 -1756.72 2212.02 -1756.72 c
2231.93 -1756.72 2248.08 -1772.86 2248.08 -1792.78 c
h
S
Q
2762.03 2197.29 m
2762.03 2217.22 2745.89 2233.37 2725.98 2233.37 c
2706.07 2233.37 2689.93 2217.22 2689.93 2197.29 c
2689.93 2177.36 2706.07 2161.21 2725.98 2161.21 c
2745.89 2161.21 2762.03 2177.36 2762.03 2197.29 c
f
q
[0.999525 0 0 -1.00047 0 0] cm
2763.34 -2196.25 m
2763.34 -2216.17 2747.2 -2232.31 2727.28 -2232.31 c
2707.36 -2232.31 2691.21 -2216.17 2691.21 -2196.25 c
2691.21 -2176.33 2707.36 -2160.19 2727.28 -2160.19 c
2747.2 -2160.19 2763.34 -2176.33 2763.34 -2196.25 c
h
S
Q
3277.05 2600.95 m
3277.05 2620.88 3260.91 2637.03 3241 2637.03 c
3221.09 2637.03 3204.95 2620.88 3204.95 2600.95 c
3204.95 2581.02 3221.09 2564.87 3241 2564.87 c
3260.91 2564.87 3277.05 2581.02 3277.05 2600.95 c
f
q
[0.999525 0 0 -1.00047 0 0] cm
3278.6 -2599.71 m
3278.6 -2619.63 3262.46 -2635.78 3242.54 -2635.78 c
3222.62 -2635.78 3206.48 -2619.63 3206.48 -2599.71 c
3206.48 -2579.8 3222.62 -2563.65 3242.54 -2563.65 c
3262.46 -2563.65 3278.6 -2579.8 3278.6 -2599.71 c
h
S
Q
3792.06 3004.61 m
3792.06 3024.54 3775.93 3040.69 3756.02 3040.69 c
3736.11 3040.69 3719.97 3024.54 3719.97 3004.61 c
3719.97 2984.68 3736.11 2968.53 3756.02 2968.53 c
3775.93 2968.53 3792.06 2984.68 3792.06 3004.61 c
f
q
[0.999525 0 0 -1.00047 0 0] cm
3793.86 -3003.18 m
3793.86 -3023.1 3777.72 -3039.25 3757.8 -3039.25 c
3737.88 -3039.25 3721.74 -3023.1 3721.74 -3003.18 c
3721.74 -2983.27 3737.88 -2967.12 3757.8 -2967.12 c
3777.72 -2967.12 3793.86 -2983.27 3793.86 -3003.18 c
h
S
Q
4307.08 3408.27 m
4307.08 3428.2 4290.94 3444.35 4271.04 3444.35 c
4251.13 3444.35 4234.99 3428.2 4234.99 3408.27 c
4234.99 3388.34 4251.13 3372.19 4271.04 3372.19 c
4290.94 3372.19 4307.08 3388.34 4307.08 3408.27 c
f
q
[0.999525 0 0 -1.00047 0 0] cm
4309.12 -3406.65 m
4309.12 -3426.57 4292.98 -3442.72 4273.06 -3442.72 c
4253.14 -3442.72 4237 -3426.57 4237 -3406.65 c
4237 -3386.74 4253.14 -3370.59 4273.06 -3370.59 c
4292.98 -3370.59 4309.12 -3386.74 4309.12 -3406.65 c
h
S
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font CMUSerif
%%EOF
