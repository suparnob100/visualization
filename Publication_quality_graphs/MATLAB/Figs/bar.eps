%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 20.10.0 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.6.0.1072779 \\(R2019a\\). Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 423 349
%%HiResBoundingBox: 0 0 423 349
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font CMUSerif
%!FontType1-1.0: CMUSerif
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Roman Regular) readonly def
/FamilyName (Nimbus Roman) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /CMUSerif def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -177 706 727] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 36 /dollar put
dup 40 /parenleft put
dup 41 /parenright put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 108 /l put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF5
CE16D9AA77431038EA7920FFEBF54E6143E306DC7F199A9AE76599F0F0C97BB1
E6D10C6B128F198FF07BD074305000151BA359478A2E632CD679450B539DC1EC
D5F0409998F8AF3ABBE8523B40BE9B5F150D5D125D65C551E82B612F51F92788
8EACECF38BF0E18883A2E6628FB5FDC17EBA1B912F8C38B6D0EF9922DDB4C783
E891E39A05B6F68446E008E7A5E24D51D1EE107C78FD68BE803A6BF74564E1C5
6A8F7416A2A9FD66CC91F2720F3D2E551087BC5C77E5ACB3BE2C91FC0DEF0D3E
DCE63D4205F2C01242837B7C439E9FBD19EDC99586875A37D0A82258E6DD6EAE
49B5EEF440F33DC25A51CE363376B735F195E96397C933DCC284D4C7691B9AC8
D001681C6CD9797278A7611F3F47BE73278EC8B57AD24E50CACD108D8BA1B5B5
C9FD40C0E061926EAAD484834AFEF64AD4F0F1C33C333AED3AAD03B77AC13803
3A4815F55C1F072762064D0CBE7E78767AF64B88124F56F629A52EF08B8713D9
35E49FB4D2ED1F4AE45E65C558E6BD208EB61F26A8912CD1B400A73A61494E3B
36AC4B2138B5EB6DB3390C842B16D436A2EC3F050E20E13E8853BF2E5C83C1E5
B01B06F41AEE49C830448B864CF4E24EBD78C716BD4DCE7F7EB091DA081205A0
1699A7AA451F8958680786B7C6175DCDA73627F701A130671BBC245069156C47
0429F072E6514BE7D144F8B08D7F0D0041C0E479529E4C315A45D57EC934CB64
6391A470A154090294BDE3EF50B7E59074A0322C8CD0F417ADFB4C276EFABA9A
FCA954E5C77989CF51640936A31F29B67C9F58C91B62A111978BB733C250A9EF
4FFD6D885AECCC026EE9EEE813F3C3D69C4280E4F5FE5EC175D18DDEE3D753EA
05C85BEEB0D11E778C56F0B53DB201F2A22E2D36789B1BE10522083E0562FE57
A5480DC7B27A83464D0F2AA8814560A292F8A163D0FE1742B188E2C59E1E54CF
5BC0BF44B8D128D51D0A9BB54BB781B2AD8EE3FFC2E1133320BAAF1249C80FEF
8192AC45CA60970FBEA02FFA4C0C29444D248598A6ACFC99DF79F8F369F0E806
C1B2F9BB6AE39D22EA50498FC01F538633B4BBC9205CCAA3B2C2EDA63D0FD85D
7C98C5F0707B329EE87F94B3ECD0D538D5BCD781E5F11A7B84C3C65CD7BD94E6
A3707E1E8FE97BA42FCEC183669F30A74180FE9239D8D64C613797CED1AED13E
777C543865592F64EE8D1515AD68335066918C02205A847BDABC133102101966
42F305B9211C2E7AC3EFAFEE46BE696722428091425B4CC4152911B3889FA8A7
54E897EBEE9D961294FB834BCBD6294F16F294C8D79FD334DDC5062BBDBC0F44
218D4C2605F0B569EC3BC3C1DCC42690EFACB994B60277326E07E18CC4C7F396
C08A719405B2139F6ED2DA0EFE7BFCA4F206EB72BEB411D4E2C9D22E2F02C54F
FE8F6D4712154E21CA786F1271978DD6DFD50B4AA7C636E95546B182380ECE2E
1A5FF7A14C7606B189A5F73BD880F57F39E7545B352AD0B442B07F0BBBEBB1A5
2F4C7CAAACA2498ABAF12B4E561148624469A397EAD5D8EA1507CA799276C901
15AEA33A3DA05FF3D77ABCD19AFA9C5484EBFC3F87DDA2BB3C31946D48FFBB13
2BDCBA57C8C4A2F0AF064808CE5E861A7A93E14C0F48F857B3605E45B762FD79
94DDA4CAA70ED688E34E42E9A7A3EA8324E386E0818433E5B5E991D2F2F11083
7C830E048483509CD0E15CD49EFA175CED75719DC5427B921E1474E4E408BD6D
14F1F6E8CEC55D58AA1988F6927996A45F3B7D4C1E01D622542109487C5F8AAA
068F1A205896720EB7C3FD3AFC8A5978D97BE245B01B4BE7120B0AA6CE3A2F1A
F83C050447677105EA3C4F2ABEDC087429EA0F7FCBC23EB2970677FA36E0A438
8C7E1B1F21936AC797FAD2711B22F2BB665F5BCF91F8EA83DB3519574E2736C8
56BDBD977C5CAED10C98494A660E4BA43D883538AFEEC13FD44B57268B3BA0EB
E8A115705F226CBED21F281E7A89CFB5F90E7ADA79ACAD001DE13371ED6FAA75
CDD16F192224D83EEFA02B0E71F903C8F71727DF79652C45FF8A2BE4791D00CE
13ED4C49A34DD89843DA4E4D6646430139E16F18760AD6ABBE3FFA9256A0D52C
244D08D3BF8AB24D2955C53522E873A55B22697D02EB7C01E72C70EE5161083B
7FDEBA6D4E2D61A04F4106F44CB6B18B08407F1D6C343F0911DA2F66C279E7AA
6D7C3C8A1731C17797DA70AEFF83ED4E5CC57821E1B3DB86E03809F4C2BAEF24
2FCD549CE8CCA9E3E813F0CDBE6DC47FC83887FAF6BE4FC0261FE82D1336CE34
278E04F733C4FAEFCFC47966357561759C3327734709DA0F35B27BBB80632CD4
68A39D54DDB2B4E23FC9C688C63DBB5205D15EB86F9D92F30330CA9BB67EC3A8
22EA5B25A7AE2BC26B9DB13556A47494074F3C95B0CBCAB45774BF35DC269FD7
B73E8456DB1B90CDC67890C8348E90B3E34321DFF8356AEF1F4E7CFEE57A93A0
76D4A62C24FBC118DEEEAA99F2818646A810E76D2A71D69B724A993A0575BFE5
D914D2E0E6C7287B18E961D761A6AB31E16BD9EC8DC60DBE25879FBD560E7034
FAE9098DE1CF139FC020AC03AD2B796940B3C21D2A74B780E82EC631B90DAFC7
414E59340CEC4521537631C76B5E248D677B17FABDD1B7FF078AEF0FBA012856
C12B61B794E8149B6F345B88BD1E7557A7B1A5E5AB381D1C16395CE50A8346E1
AF89D234531F75FD8E871FB2F2B903F0E6F241964D81362111F75EB2ACAE9BEE
E3A4C201B35E0148BA09287F8AB562D0709C77D7096D839ACA9273A7132C4A55
319285DBA120BAF518AC7777520288B7EA833B7EE0816490210568266EAEB1EC
99ED289B1752055103085D35EBE8A3A25263AF2CC945990A9C367333C4E1D05E
DBCCF904902160B50862A266622CC4B0DC70292C396F787D1FADC97ED7849A78
DA61F0AC022A8B58429029226A77A3351E323CF72F5F7D4F042B1815A5099E0A
35BB555743C25905357DE8AA4093255BC88CF3C1D6040410C1A95668197493DD
36195ADF30566B81E0D7624AA9D2DFC8C17D650478675E2874F581890E6740BA
F46EA68FFE67BCB05E1AE484A417ECE65EBBA38982D997A7A3E1C13477B14CA7
7F9B05AA02FDFA363A9C0DC0D8DAD4DC1AAC6DB216DFD13B7EFB3637343A4D1E
CB3387244139631A45219FB1B8CC4EFEF07F364440626D70C90E99AD5CDD631B
CC6A327A1417CD1D1C7C564637227210CB87DDD4BC7CFDF59DBDE584D90E82C1
7E7D25CBE62C4D7D226959FFBC7420631DC359B059BDA5F643451EF6A0DFEF13
C5F7B2B396F2455B28E775FBD70CDD1DD160A70B04DB134FB8465251BA36CC53
22B4F72772874056D00AE6B7E7D88CBF5D00C31F9FC50DD0CB3FBE6585BA3986
7DED75D75C282D4E7F56ECEE551E2DF9FB37EC56CE7BED06A3FB61502F468161
0C7A75002D998571686B5BE9D65707EEBBE83BBE261CBDBDA80E63C4702BA0C7
BC1342810EFB29C189C5C290855C0BF85A322D1584D1C0E3EC5E7A8BB14D2461
AC0E35FF982163ACC1A0CF880973C821773C64D2B3C87FF4A2129E7A4E702D34
99E9B3596E133C7C18CA5AEF4E92FA7E6FE9602B7639390A8231AB6125D01A5F
551A1FA1419EB3B620A8122AFC0F17A123C61CB642C012915DFBA30EDEDCBABE
C79FF1123FCCBD3AC41C02B6459EE4CCA14C117FA371BBC458E60DC620F64D2B
9D08A06887A79EC799E6CA49D05022F91A91C43F17AA4C22DAFDE8862D8409D3
2BEA625683AFB43D79A2127A7449DDC5ABA502991BA08657C71FF4ADDC5A2560
6D91624A8ECBEC70E7CCD8C60A5A2E103AB7A5AEC9EDD9B94A0EC4C88247B949
A6867AB4EDF495B9973D9136D8C93D691BF77859922C3396CB0A53D494B16453
EF99013598D62F872CF67211DD30ECB094CF864393A5BEB2881D95C34F807B41
5051CD9F07F4F348E8E54747936E38CDC65C945EBE4293D452E36854BDABA84C
5789993CDD43FD7B4F8BEB9D38C4951B3B157D1EDF0ECF49708DF55DA4BD3187
EB4DF460608D6609D60CF81B87AC452AA7A8DAF9A219A5A83507E41F239D2968
7EEA28F1AD6FFFE6F501125CEE2BC4373D395E789639D7866354C40290B5329F
4DE25C05C1037F16618DCBF71013464F79055027C55B148DE6B4ECAD7141902F
0D5902111AFF7C2799B1FF8B05BEA9C59DD3D8BB49AA4E49CD393620589D8193
3E373974AC74EF6750FBA6D98F9F90FB10F35AB19C2AF5E8A689FF0A13823105
545BB35D6BB69F4B8DD4C5998A0A811DD73E7B1FF2ECD9DD93E50AF53381E3DB
0EFD4ABA85AF5B3CEC78D3598850CE685667DD868A93B65E328B811CB1EBDAAF
B936772BB3F4C2DC5C6EF513A75B5546281F07E2DE01BF7C0B743627287A32C8
3348A44978C5047830D63FB5B3B850A003AE7FB3037F974CB539677D552C9094
31E3CF2B02C8C230F5DA91DBB7EBB093D220892A3624EEC4B0B6B2F61BB7C636
530EDC32AE2332D972D6D6A27BC3B02707526DA165AC9F54D82E06AC395361A7
726A56C23E77FA85F603D7366861463BE496A36DFA6A37D716E5B48DB1E68B13
ECDBD064AB181F2D07A8AEA3D745EB087993CF4B1E5356AC31B092546925244C
6DB735BA20B2534456C33D9C1A81E326B0DE96D13C35A30B657616399FC53229
646B765D686B3E63304CC9E1835820CF06D06D9A15337DF3D365E5E79EF08486
468E366EB35482D56C705F981A95A5D4000BFC6A41B5DFCB8C6777CF8B3944BF
CC83761558E8EF6756818B73AE1BBAD204855042B88207DB7832B246F0F01D18
E1AA5476A651D5E7924A02CA0C27F63FB2A6EB7544EE02A955CE99CC225B4F36
4F9A7889DACE261AF08E2BC0179742C3097A568596BEE85EC2F0DD5706305636
CFE76565DD422BE7BAD4A04DFC929B118491A8F415D504D83450305D644DE637
2F09ECE57D351C43819373837A1A3D52DF9632DAA77A31BFE7DF1B2F73DDAE80
01546F327890AF93BD12876CA62ED1666ED6C030606EEE17BE8513A56C7AF44D
C2733832FCB148A8F8D54CD6F3A40BF4471A3771E63D9D1DF8387AC014207C5D
D5AF1F574587B6CC75CB7CBBAA613AC11C05C241B7560D1E550773A6610AF3C4
55F574E826E69423B2253B75702D94AB53E44663E7BA11633C0A1712D5517AA2
72161FFD9DFDA6B24F3A43B28E04FAFD7048ECEF628B7287C3DF5B2464CA81CE
F2C59B133F9FD521F2BB6C13FEE3BA0CD6A8EC231708E8424CF44102DA342FAF
F08B0D4609A04CBD66EF18DE411E59227A977CC3223C9EF28226AB14633FEAB9
E37D18E22A3506A1E11DD9F7A21624649BB14E5FDCDEC9677787091482E9D18D
5419FCEA804B0F0771C76667897E8892A812F8186191554880C1303618B1D1A4
AAFA0A98F2ABC5B67AAFA46C1FEFB7D4364BA4ACA18FD8F7DBD8A9114912DAF4
5D0B22E0D94B53840572EC59695EEDC2BD62887011017584F2C174AF41712A1E
A0BCADB0555C4F750235FA5B4A527DB3630ABD1542A92352833CEF210C29C81C
65AA6C40FBF88ABDAB10497F8B8201BB08E115DD391F93E77E731B4D8EC73F45
6A3ACBF8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F8_0 /CMUSerif 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 423 349 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[0.9492] sc
724.969 528.863 3472.51 2884.75 re
f
7.51106 w
1 j
/DeviceGray {} CS
[1] SC
q
[0.999825 0 0 -1.00017 0 0] cm
1042.9 -528.771 m
1042.9 -3413.02 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
1752.27 -528.771 m
1752.27 -3413.02 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
2461.65 -528.771 m
2461.65 -3413.02 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
3171.03 -528.771 m
3171.03 -3413.02 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
3880.41 -528.771 m
3880.41 -3413.02 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
4198.21 -528.771 m
725.095 -528.771 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
4198.21 -1249.83 m
725.095 -1249.83 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
4198.21 -1970.89 m
725.095 -1970.89 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
4198.21 -2691.96 m
725.095 -2691.96 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
4198.21 -3413.02 m
725.095 -3413.02 l
S
Q
5.00537 w
/DeviceRGB {} CS
[0 0 0.012] SC
q
[0.999825 0 0 -1.00017 0 0] cm
725.095 -557.047 m
4198.21 -557.047 l
S
Q
/DeviceRGB {} cs
[0.7148 0.216 0.4751] sc
1326.41 1971.24 m
759.008 1971.24 l
759.008 557.15 l
1326.41 557.15 l
1326.41 1971.24 l
h
2035.67 2678.29 m
1468.264 2678.29 l
1468.264 557.15 l
2035.67 557.15 l
2035.67 2678.29 l
h
2744.92 1617.71 m
2177.518 1617.71 l
2177.518 557.14 l
2744.92 557.14 l
2744.92 1617.71 l
h
3454.18 3385.33 m
2886.774 3385.33 l
2886.774 557.14 l
3454.18 557.14 l
3454.18 3385.33 l
h
4163.43 3031.81 m
3596.028 3031.81 l
3596.028 557.14 l
4163.43 557.14 l
4163.43 3031.81 l
h
f
20.0275 w
/DeviceRGB {} CS
[0.6973 0.208 0.467] SC
q
[0.999825 0 0 -1.00017 0 0] cm
759.144 -1970.89 567.506 1413.843 re
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
1468.52 -2677.82 567.51 2120.773 re
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
2177.9 -1617.43 567.5 1060.383 re
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
2887.28 -3384.74 567.5 2827.693 re
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
3596.66 -3031.28 567.5 2474.233 re
S
Q
7.51106 w
2 J
/DeviceRGB {} CS
[0 0 0.012] SC
q
[0.999825 0 0 -1.00017 0 0] cm
725.095 -528.771 m
4198.21 -528.771 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
1042.9 -528.771 m
1042.9 -459.306 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
1752.27 -528.771 m
1752.27 -459.306 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
2461.65 -528.771 m
2461.65 -459.306 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
3171.03 -528.771 m
3171.03 -459.306 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
3880.41 -528.771 m
3880.41 -459.306 l
S
Q
/DeviceRGB {} cs
[0 0 0.012] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.999651 0 0 1 99.1648 25.3055] Tm
0 0 Td
/F8_0 15.0247 Tf
(A)
[10.847833
0] Tj
-4000.25 TJm
(B)
[10.021475
0] Tj
-4015.22 TJm
(C)
[10.021475
0] Tj
-4055.22 TJm
(D)
[10.847833
0] Tj
-4040.25 TJm
(E)
[9.180092
0] Tj
114.256 -21.4352 Td
/F8_0 16.5272 Tf
(Products)
[9.189123
0
5.503558
0
8.2636
0
8.2636
0
8.2636
0
7.338077
0
4.594562
0
6.429081
0] Tj
Q
q
[0.999825 0 0 -1.00017 0 0] cm
725.095 -528.771 m
725.095 -3413.02 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
725.095 -528.771 m
655.63 -528.771 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
725.095 -1249.83 m
655.63 -1249.83 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
725.095 -1970.89 m
655.63 -1970.89 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
725.095 -2691.96 m
655.63 -2691.96 l
S
Q
q
[0.999825 0 0 -1.00017 0 0] cm
725.095 -3413.02 m
655.63 -3413.02 l
S
Q
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0.999651 0 0 1 34.1109 46.877] Tm
0 0 Td
/F8_0 15.0247 Tf
(-4.0)
[5.003225
0
7.51235
0
3.756175
0
7.51235
0] Tj
-3.00496 72.1188 Td
(98.0)
[7.51235
0
7.51235
0
3.756175
0
7.51235
0] Tj
-11.41884 144.2376 Td
(200.0)
[7.51235
0
7.51235
0
7.51235
0
3.756175
0
7.51235
0] Tj
-11.41884 216.356 Td
(302.0)
[7.51235
0
7.51235
0
7.51235
0
3.756175
0
7.51235
0] Tj
-11.41884 288.4748 Td
(404.0)
[7.51235
0
7.51235
0
7.51235
0
3.756175
0
7.51235
0] Tj
[0 1.00035 -1 0 15.4867 163.77] Tm
0 0 Td
/F8_0 16.5215 Tf
(Sales \($\))
[9.185954
0
7.335546
0
4.592977
0
7.335546
0
6.426864
0
4.130375
0
5.50166
0
8.26075
0
5.50166
0] Tj
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font CMUSerif
%%EOF
